#include <stdio.h>

// Function to swap two variables
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int main() {
    int n;
    printf("Enter Number of Processes: ");
    scanf("%d", &n);

    // Arrays for burst time (b), priority (p), and process ID (index)
    int b[n], p[n], index[n];
    
    // Input burst time and priority for each process
    for (int i = 0; i < n; i++) {
        printf("Enter Burst Time and Priority Value for Process %d: ", i + 1);
        scanf("%d %d", &b[i], &p[i]);
        index[i] = i + 1;  // Storing process ID (1-based indexing)
    }

    // Sorting processes based on priority (higher priority comes first)
    for (int i = 0; i < n; i++) {
        int a = p[i], m = i;
        // Find the process with the highest priority from i to n-1
        for (int j = i; j < n; j++) {
            if (p[j] > a) {
                a = p[j];
                m = j;
            }
        }
        // Swap the processes to bring the highest priority to the front
        swap(&p[i], &p[m]);
        swap(&b[i], &b[m]);
        swap(&index[i], &index[m]);
    }

    // T stores the starting time of processes
    int t = 0;
    
    // Printing the order of process execution
    printf("Order of process Execution is\n");
    for (int i = 0; i < n; i++) {
        printf("P%d is executed from %d to %d\n", index[i], t, t + b[i]);
        t += b[i];  // Update the time for the next process
    }

    // Calculating and printing wait time and turnaround time
    printf("\nProcess Id  Burst Time  Wait Time  Turnaround Time\n");
    int wait_time = 0, turn_around_time;
    
    for (int i = 0; i < n; i++) {
        // Turnaround Time = Wait Time + Burst Time
        turn_around_time = wait_time + b[i];
        printf("P%d          %d          %d          %d\n", index[i], b[i], wait_time, turn_around_time);
        wait_time += b[i];  // Update wait time for the next process
    }

    return 0;
}

Output:
Enter Number of Processes: 4
Enter Burst Time and Priority Value for Process 1: 3 4
Enter Burst Time and Priority Value for Process 2: 2 5
Enter Burst Time and Priority Value for Process 3: 3 7
Enter Burst Time and Priority Value for Process 4: 4 5
Order of process Execution is
P3 is executed from 0 to 3
P2 is executed from 3 to 5
P4 is executed from 5 to 9
P1 is executed from 9 to 12

Process Id  Burst Time  Wait Time  Turnaround Time
P3          3          0          3
P2          2          3          5
P4          4          5          9
P1          3          9          12