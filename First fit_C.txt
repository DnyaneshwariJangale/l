#include <stdio.h>
#include <conio.h>
#define max 25

int main() {
    int frag[max], b[max], f[max], i, j, nb, nf, temp;
    static int bf[max], ff[max];
    
    printf("\n\tMemory Management Scheme - First Fit");
    
    printf("\nEnter the number of blocks: ");
    scanf("%d", &nb);
    
    printf("Enter the number of files: ");
    scanf("%d", &nf);
    
    printf("\nEnter the size of the blocks:\n");
    for (i = 1; i <= nb; i++) {
        printf("Block %d: ", i);
        scanf("%d", &b[i]);
    }
    
    printf("Enter the size of the files:\n");
    for (i = 1; i <= nf; i++) {
        printf("File %d: ", i);
        scanf("%d", &f[i]);
    }

    for (i = 1; i <= nf; i++) {
        for (j = 1; j <= nb; j++) {
            if (bf[j] == 0) { // If block is free
                temp = b[j] - f[i];
                if (temp >= 0) { // If block can accommodate the file
                    ff[i] = j; // Store block index
                    frag[i] = temp; // Calculate fragmentation
                    bf[j] = 1; // Mark block as filled
                    break;
                }
            }
        }
    }
    
    printf("\nFile_no:\tFile_size:\tBlock_no:\tBlock_size:\tFragment\n");
    for (i = 1; i <= nf; i++) {
        if (ff[i] != 0) {
            printf("%d\t\t%d\t\t%d\t\t%d\t\t%d\n", i, f[i], ff[i], b[ff[i]], frag[i]);
        } else {
            printf("%d\t\t%d\t\tNot Allocated\n", i, f[i]);
        }
    }
    
    getch();
}

Output:

        Memory Management Scheme - First Fit
Enter the number of blocks: 3
Enter the number of files: 2

Enter the size of the blocks:
Block 1: 5
Block 2: 2
Block 3: 7
Enter the size of the files:
File 1: 1
File 2: 4

File_no:        File_size:      Block_no:       Block_size:     Fragment
1               1               1               5               4
2               4               3               7               3
